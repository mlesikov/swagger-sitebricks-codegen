package {{modelPackage}};

import java.io.File;
import java.util.List;
import java.io.File;
import java.util.List;
import com.clouway.telcong.bss.adapter.http.GsonTransport;
import com.google.common.base.Optional;
import com.google.common.collect.Lists;
import com.google.inject.Inject;
import com.google.inject.TypeLiteral;
import com.google.inject.name.Named;
import com.google.sitebricks.At;
import com.google.sitebricks.headless.Reply;
import com.google.sitebricks.headless.Request;
import com.google.sitebricks.headless.Service;
import com.google.sitebricks.http.Get;
import com.google.sitebricks.http.Post;
import com.google.sitebricks.http.Put;
import com.google.sitebricks.http.Delete;

{{#operations}}
    /**
     *
     * @author
     * add this binding in the SitebricksModule -  at("{{contextPath}}").serve({{classname}}.class);
     */
    @At("{{contextPath}}/{{baseName}}")
    @Service
    public class {{classname}}  {
    /**
    * Uncomment and implement as you see fit.  These operations will map
    * Direclty to operation calls from the routing logic.  Because the inflector
    * Code allows you to implement logic incrementally, they are disabled.
    **/

    @Inject
    public {{classname}}(){
    }

    {{#operation}}

        /**
         * {{summary}} {{notes}}
         * {{#hasQueryParams}}@param request - sitebricks request wrapper, that contains the request body{{description}}{{/hasQueryParams}}
         * {{#hasBodyParam}}@param request - sitebricks request wrapper, that contains the request body{{description}}{{/hasBodyParam}}
         * {{#pathParams}}
         * @param {{paramName}} {{description}}
         * {{/pathParams}}
         * Expected answers:
         * {{#responses}}
         *          code {{code}} : {{dataType}} {{^message.isEmpty}}({{message}}){{/message.isEmpty}}{{^headers.isEmpty}}
         *          Headers :{{#headers}}
         *          {{baseName}} - {{description}}{{/headers}}{{/headers.isEmpty}}
         * {{/responses}}
         * @return
         */
         {{#methodPath}}@At("{{methodPath}}"){{/methodPath}}
         @{{httpMethodCapitalized}}
         public Reply<?> {{operationId}}({{>methodParams}}) {
           {{#hasBodyParam}}{{>handleBodyParams}}{{/hasBodyParam}}
           {{#hasQueryParams}}{{>handleQueryParams}}{{/hasQueryParams}}
           return Reply.saying().ok();
         }
    {{/operation}}
    }
{{/operations}}

